# --- pre-chroot ---

# encrypted rootfs
shred --verbose --random-source /dev/urandom --iterations 1 /dev/nvme0n1p6
cryptsetup -c aes-xts-plain64 -s 512 -y luksFormat /dev/nvme0n1p6
cryptsetup luksOpen /dev/nvme0n1p6 gentoo

# formatting
mkfs.btrfs -f /dev/mapper/gentoo
mkswap /dev/nvme0n1p5

# --- (3/10) The hard disks are initialized to host the Gentoo installation. ---

# mounting
# https://wiki.gentoo.org/wiki/Handbook:AMD64/Installation/Base#Chrooting
mount /dev/mapper/gentoo /mnt/gentoo
mkdir -p /mnt/gentoo/efi
mount /dev/nvme0n1p1 /mnt/gentoo/efi
swapon /dev/nvme0n1p5

cp --dereference /etc/resolv.conf /mnt/gentoo/etc/

# --- (4/10) The installation environment is prepared and the user is ready to chroot into the new environment. ---

# --- cut here: chroot ---

# https://wiki.gentoo.org/wiki/Handbook:AMD64/Installation/Base#Configuring_Portage
emerge-webrsync
emerge --sync

# https://wiki.gentoo.org/wiki/Handbook:AMD64/Installation/Base#Choosing_the_right_profile
# default/linux/amd64/23.0/musl/hardened
eselect profile set 45
# https://wiki.gentoo.org/wiki/Handbook:AMD64/Installation/Base#Installing_binary_packages
getuto

# musl stuff
# https://wiki.gentoo.org/wiki/Musl
emerge sys-apps/musl-locales
emerge sys-libs/timezone-data

# --- (5/10) Core packages, which are the same on all Gentoo installations, are installed. ---

emerge sys-kernel/gentoo-sources
emerge app-arch/zstd

(cd /usr/src/linux*; make -j16 -l16 && make modules_install)
ln -s /usr/src/linux* /usr/src/linux

# the Ryzen 9 6900HS is a AMD Rembrandt apu
# https://wiki.gentoo.org/wiki/Handbook:AMD64/Installation/Kernel#Optional:_Installing_firmware_and.2For_microcode
emerge sys-kernel/linux-firmware sys-firmware/sof-firmware

# install cryptsetup and btrfs-progs before initramfs creation
# https://wiki.gentoo.org/wiki/Rootfs_encryption#Gentoo_installation
emerge sys-kernel/ugrd dev-python/zstandard
emerge sys-fs/cryptsetup sys-fs/btrfs-progs

# careful!
rm /boot/System.map*
rm /boot/config-*
rm /boot/vmlinuz-*
rm /boot/initramfs-*

# install kernel
(cd /usr/src/linux; make install)
cp /boot/amd-uc.img /efi/EFI/Gentoo/microcode.img  # microcode
cp /boot/initramfs-*.img /efi/EFI/Gentoo/initramfs.img
cp /boot/vmlinuz-* /efi/EFI/Gentoo/vmlinuz

# --- (6/10) The Linux kernel is installed. ---

# https://wiki.gentoo.org/wiki/Handbook:AMD64/Installation/System#Network
emerge net-misc/dhcpcd
rc-update add dhcpcd default
rc-service dhcpcd start

# networking
emerge net-wireless/iw net-wireless/wpa_supplicant

# https://wiki.gentoo.org/wiki/Handbook:AMD64/Installation/Tools

emerge app-admin/sysklogd
rc-update add sysklogd default

emerge sys-process/fcron
emerge --config sys-process/fcron

emerge net-misc/chrony
rc-update add chronyd default

# windows interop (fat32, ntfs)
emerge sys-fs/dosfstools sys-fs/ntfs3g

# users
useradd -m -G users,wheel,audio -s /bin/bash majo
passwd majo

# delete the root password and disable login
passwd -dl root
